<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.2.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.2.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.2.xsd">

	<context:component-scan base-package="com.test.app2" />

	<!-- Mybatis 설정 -->
	<bean id="sqlSession" class="org.mybatis.spring.SqlSessionFactoryBean" >
		<property name="dataSource" ref="dataSource" />
		<property name="configLocation" value="classpath:sql-map-config.xml" />
	</bean>
	<bean class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg ref="sqlSession" />
	</bean>



	<!-- DataSource 설정 [day68-1] -->
		                       <!-- 내가 만든 아닌 Spring이 제공해주는 것 사용-->
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
		<property name="driverClassName" value="oracle.jdbc.driver.OracleDriver" />
		<property name="url" value="jdbc:oracle:thin:@localhost:1521:xe" />
		<property name="username" value="jin" />
		<property name="password" value="1234" />
	</bean>	

	<!-- 트랜잭션 관리자 클래스 등록 [day70] -->
	<bean id="txManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>
	<tx:advice id="txAdvice" transaction-manager="txManager">
		<tx:attributes>
			<tx:method name="get*" read-only="true" />
			<tx:method name="*" />
		</tx:attributes>
	</tx:advice>

	<!-- aop를 어노테이션으로 사용할 것이다. -->
	<aop:aspectj-autoproxy></aop:aspectj-autoproxy>
   
   <!-- 결합 처리 | 인자에 .. -> 타입에 상관없이-->
   <aop:config>
   		<aop:pointcut expression="execution(* com.test.app2..*(..))" id="txPointcut"/>
   		<aop:advisor advice-ref="txAdvice" pointcut-ref="txPointcut" />
   </aop:config>				<!-- ▲횡단관심 -->		 <!-- ▲핵심관심 -->
   
	<!-- JDBCTemplate 생성 [day68-2]-->
	<bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
		<property name="dataSource" ref="dataSource" />
	</bean>

	
</beans>
